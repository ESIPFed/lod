<?xml version="1.0" encoding="UTF-8"?>
<AGUAbstract xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.agu.org/focus_group/essi/schema" xsi:schemaLocation="http://www.agu.org/focus_group/essi/schema http://www.agu.org/focus_group/essi/schema/agu.xsd">
  <Meeting>2009 Fall Meeting</Meeting>
  <Section>Earth and Space Science Informatics</Section>
  <Id>IN11A-1044</Id>
  <Keywords>
    <Keyword>INFORMATICS / Community modeling frameworks</Keyword>
    <Keyword>INFORMATICS / Interoperability</Keyword>
    <Keyword>INFORMATICS / Metadata</Keyword>
  </Keywords>
  <Abstract>The popular programming languages Java and C# provide annotations, a form of meta-data construct. Software frameworks for web integration, web services, database access, and unit testing now take advantage of annotations to reduce the complexity of APIs and the quantity of integration code between the application and framework infrastructure. Adopting annotation features in frameworks has been observed to lead to cleaner and leaner application code. The USDA Object Modeling System (OMS) version 3.0 fully embraces the annotation approach and additionally defines a meta-data standard for components and models. In version 3.0 framework/model integration previously accomplished using API calls is now achieved using descriptive annotations. This enables the framework to provide additional functionality non-invasively such as implicit multithreading, and auto-documenting capabilities while achieving a significant reduction in the size of the model source code. Using a non-invasive methodology leads to models and modeling components with only minimal dependencies on the modeling framework. Since models and modeling components are not directly bound to framework by the use of specific APIs and/or data types they can more easily be reused both within the framework as well as outside of it. To study the effectiveness of an annotation based framework approach with other modeling frameworks, a framework-invasiveness study was conducted to evaluate the effects of framework design on model code quality. A monthly water balance model was implemented across several modeling frameworks and several software metrics were collected. The metrics selected were measures of non-invasive design methods for modeling frameworks from a software engineering perspective. It appears that the use of annotations positively impacts several software quality measures. In a next step, the PRMS model was implemented in OMS 3.0 and is currently being implemented for water supply forecasting in the western United States at the USDA NRCS National Water and Climate Center. PRMS is a component based modular precipitation-runoff model developed to evaluate the impacts of various combinations of precipitation, climate, and land use on streamflow and general basin hydrology. The new OMS 3.0 PRMS model source code is more concise and flexible as a result of using the new framework&amp;#8217;s annotation based approach. The fully annotated components are now providing information directly for (i) model assembly and building, (ii) dataflow analysis for implicit multithreading, (iii) automated and comprehensive model documentation of component dependencies, physical data properties, (iv) automated model and component testing, and (v) automated audit-traceability to account for all model resources leading to a particular simulation result. Experience to date has demonstrated the multi-purpose value of using annotations. Annotations are also a feasible and practical method to enable interoperability among models and modeling frameworks. As a prototype example, model code annotations were used to generate binding and mediation code to allow the use of OMS 3.0 model components within the OpenMI context.</Abstract>
  <Title>Use of Annotations for Component and Framework Interoperability</Title>
  <Session>IN11A</Session>
  <Hour>0800h</Hour>
  <Authors>
    <Author><Name>David, O</Name><Email>odavid@colostate.edu</Email><Affiliations><Affiliation>CSU, Fort Collins, CO, United States</Affiliation></Affiliations></Author>
    <Author><Name>Lloyd, W</Name><Email>wlloyd@acm.org</Email><Affiliations><Affiliation>CSU, Fort Collins, CO, United States</Affiliation></Affiliations></Author>
    <Author><Name>Carlson, J</Name><Email>jack.carlson@ars.usda.gov</Email><Affiliations><Affiliation>NRCS ITC, Fort Collins, CO, United States</Affiliation></Affiliations></Author>
    <Author><Name>Leavesley, G H</Name><Email>ghleavesley@comcast.net</Email><Affiliations><Affiliation>CSU, Fort Collins, CO, United States</Affiliation></Affiliations></Author>
    <Author><Name>Geter, F</Name><Email>Frank.Geter@ftc.usda.gov</Email></Author>
  </Authors>
</AGUAbstract>
